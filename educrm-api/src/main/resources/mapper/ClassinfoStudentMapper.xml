<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuxue.api.mapper.ClassinfoStudentMapper" >
  <resultMap id="BaseResultMap" type="com.wuxue.model.ClassinfoStudent" >
    <id column="pk_classinfo" property="pkClassinfo" jdbcType="VARCHAR" />
    <id column="pk_student" property="pkStudent" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="INTEGER" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="lastedit_date" property="lasteditDate" jdbcType="TIMESTAMP" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    pk_classinfo, pk_student, kind, memo, creator, creation_date, modifier, lastedit_date,isvalid
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.wuxue.model.ClassinfoStudent" >
    select
    <include refid="Base_Column_List" />
    from classinfo_student
    where 1=1
    <if test="pkClassinfo != null and pkClassinfo != ''">
      and  pk_classinfo = #{pkClassinfo}
    </if>
    <if test="pkStudent != null" >
      and pk_student = #{pkStudent}
    </if>
    <if test="isvalid != null and isvalid != ''">
      and  isvalid = #{isvalid}
    </if>
    <if test="start != null and pageSize != null">
      LIMIT #{start}, #{pageSize}
    </if>
  </select>
  <select id="selectPkClassinfo" resultMap="BaseResultMap" parameterType="com.wuxue.model.ClassinfoStudent" >
    select
    <include refid="Base_Column_List" />
    from classinfo_student
    where pk_classinfo in (SELECT pk_classinfo from classinfo where type=0)
   and pk_student= #{pkStudent,jdbcType=VARCHAR} and isvalid=1

  </select>
  <select id="selectByStudent" resultMap="BaseResultMap" parameterType="com.wuxue.model.ClassinfoStudent" >
   SELECT
    <include refid="Base_Column_List" />
   from classinfo_student WHERE pk_student = #{pkStudent,jdbcType=VARCHAR}
    and
    pk_classinfo in (SELECT pk_classinfo from classinfo where type = 3) AND isvalid=1;

  </select>
  <select id="countBy" resultType="java.lang.Integer" parameterType="com.wuxue.model.ClassinfoStudent" >
    select
    count(*)
    from classinfo_student
    where 1=1
  </select>
  <select id="selectCoountBykey" resultType="java.lang.Integer" parameterType="com.wuxue.model.ClassinfoStudent" >
    select count(0) from `schedule`
    where pk_student in
    ( select pk_classinfo from classinfo_student
    where pk_student=#{pkStudent,jdbcType=VARCHAR} and pk_classinfo in (select pk_classinfo from classinfo where type=3))
    and WEEKDAY(start_time) in
     (select weekday(start_time) from `schedule`
     where pk_student=#{pkClassinfo,jdbcType=VARCHAR})
  </select>
  <select id="selectCountByPkClassinfo" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    count(pk_student)
    from classinfo_student
    where pk_classinfo = #{pkClassinfo,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.wuxue.model.ClassinfoStudentKey" >
    select 
    <include refid="Base_Column_List" />
    from classinfo_student
    where pk_classinfo = #{pkClassinfo,jdbcType=VARCHAR}
      and pk_student = #{pkStudent,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.wuxue.model.ClassinfoStudentKey" >
    delete from classinfo_student
    where pk_classinfo = #{pkClassinfo,jdbcType=VARCHAR}
      and pk_student = #{pkStudent,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wuxue.model.ClassinfoStudent" >
    insert into classinfo_student (pk_classinfo, pk_student, kind,
      memo, creator, creation_date, 
      modifier, lastedit_date,isvalid)
    values (#{pkClassinfo,jdbcType=VARCHAR}, #{pkStudent,jdbcType=VARCHAR}, #{kind,jdbcType=INTEGER}, 
      #{memo,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=VARCHAR}, #{lasteditDate,jdbcType=TIMESTAMP},#{isvalid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wuxue.model.ClassinfoStudent" >
    insert into classinfo_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkClassinfo != null" >
        pk_classinfo,
      </if>
      <if test="pkStudent != null" >
        pk_student,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="lasteditDate != null" >
        lastedit_date,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkClassinfo != null" >
        #{pkClassinfo,jdbcType=VARCHAR},
      </if>
      <if test="pkStudent != null" >
        #{pkStudent,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="lasteditDate != null" >
        #{lasteditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuxue.model.ClassinfoStudent" >
    update classinfo_student
    <set >
      <if test="kind != null" >
        kind = #{kind,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="lasteditDate != null" >
        lastedit_date = #{lasteditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
    </set>
    where pk_classinfo = #{pkClassinfo,jdbcType=VARCHAR}
      and pk_student = #{pkStudent,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuxue.model.ClassinfoStudent" >
    update classinfo_student
    set kind = #{kind,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      lastedit_date = #{lasteditDate,jdbcType=TIMESTAMP}
      isvalid = #{isvalid,jdbcType=INTEGER}
    where pk_classinfo = #{pkClassinfo,jdbcType=VARCHAR}
      and pk_student = #{pkStudent,jdbcType=VARCHAR}
  </update>
  <update id="updateByPkStudent" parameterType="java.lang.String" >
   UPDATE
   classinfo_student
   SET isvalid=0
   where pk_student=#{pkStudent,jdbcType=VARCHAR}
  </update>
  <select id="selectClassInfoIdByStudentId"   resultType="java.lang.String">
    select cs.pk_classinfo from classinfo_student cs  left join classinfo c
    on cs.pk_classinfo = c.pk_classinfo
    where cs.pk_student =#{studentId} and c.type =0
  </select>

  <select id="selectStudentIdsByClassinfoIds" resultType="java.lang.String">
    select pk_student studentId from classinfo_student where 1=1
    <if test="ids != null and ids.size > 0">
      and pk_classinfo in
      <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

</mapper>
