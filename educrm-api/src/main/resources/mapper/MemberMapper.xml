<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuxue.api.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.wuxue.model.Member" >
    <id column="pk_member" property="pkMember" jdbcType="VARCHAR" />
    <result column="caption" property="caption" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="contnet" property="contnet" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    pk_member, caption, phone, contnet, sex, remarks, isdel
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.wuxue.model.Member" >
    select
    <include refid="Base_Column_List" />
    from member
    where isdel != 0
  </select>
  <select id="countBy" resultType="java.lang.Integer" parameterType="com.wuxue.model.Member" >
    select
    count(*)
    from member
    where isdel != 0
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member
    where pk_member = #{pkMember,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member
    where pk_member = #{pkMember,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wuxue.model.Member" >
    insert into member (pk_member, caption, phone, 
      contnet, sex, remarks, 
      isdel)
    values (#{pkMember,jdbcType=VARCHAR}, #{caption,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{contnet,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wuxue.model.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkMember != null" >
        pk_member,
      </if>
      <if test="caption != null" >
        caption,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="contnet != null" >
        contnet,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkMember != null" >
        #{pkMember,jdbcType=VARCHAR},
      </if>
      <if test="caption != null" >
        #{caption,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="contnet != null" >
        #{contnet,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuxue.model.Member" >
    update member
    <set >
      <if test="caption != null" >
        caption = #{caption,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="contnet != null" >
        contnet = #{contnet,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where pk_member = #{pkMember,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuxue.model.Member" >
    update member
    set caption = #{caption,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      contnet = #{contnet,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=INTEGER}
    where pk_member = #{pkMember,jdbcType=VARCHAR}
  </update>
</mapper>